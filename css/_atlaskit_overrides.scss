/**
 * Move the @atlaskit/flag container up a little bit so it does not cover the
 * toolbar with the first notification.
 */
.cjMOOK{
    top: calc(#{$newToolbarSizeWithPadding}) !important;
    bottom: auto !important;
    left: 20px !important;
}

.kGQNDu {
    transition: visibility 0s, opacity 0.5s linear !important;
    visibility: hidden !important;
    opacity: 0 !important;
}

.Wrapper-sc-19lmueh-0:not(:first-child) {
    opacity: 0 !important;
}

.fxBTfB {
    width:400px !important;
}

.fxBTfB-hide {
    transition: opacity 0.5s linear;
    display: none !important;
    opacity: 0;
}

.gpUwQx {
    bottom: auto !important;
    transition: width 1s !important;
    &:hover {
        width:400px !important;

        .fxBTfB-hide {
            opacity:1 !important;
            display: flex !important;
        }

        .kGQNDu {
            visibility: visible !important;
            opacity: 1 !important;
        }
    }
}

.kuyJLl {
    background-color: $darkPopupsColor !important;
}

/**
 * Disable the slide-in animation for @atlaskit/flag due to the animation
 * repeating for each queued flag once it becomes the top flag.
 */
 .mIBKA:first-child {
    animation: cbfRuT 0s !important;
    -webkit-animation: cbfRuT 0s !important;
}

.modal-dialog-form {
    /**
     * Update the @atlaskit/dropdown-menu trigger wrapper to make sure it looks
     * click-able.
     */
    .cjJUnw {
        cursor: pointer;
    }

    /**
     * Override @atlaskit/dropdown-menu styling when in a modal because the
     * dropdown backgrounds clash with the modal backgrounds.
     */
    .cksvax[data-role=droplistContent] {
        border: 1px solid #455166;
    }
}

/**
 * Override @atlaskit/theme styling for the top toolbar so it displays over
 * the video thumbnail while obscuring as little as possible.
 */
.videocontainer .tOoji {
    background: none;
}

/**
 * Override @atlaskit/InlineDialog styling for the overflowmenu so it displays
 * with the correct height.
 */
.toolbox-button-wth-dialog .eYJELv {
    max-height: initial;
}

.eYJELv {
    background-color: $darkPopupsColor !important;
}

.eYJELv li:hover {
    background-color: $darkPopupsHoverColor !important;
}
